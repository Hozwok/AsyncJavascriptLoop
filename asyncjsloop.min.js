(function(e){function g(d,a){var b=new e.Deferred;if(0<a.length){var c=a.splice(0,1);d.apply(this,c[0]).done(function(c){f.push(c);g(d,a).done(function(a){b.resolve(f)}).fail(function(a){b.reject(a)})}).fail(function(a){f.push(a);b.reject(f)})}else setTimeout(function(){b.resolve(f)},1);return b.promise()}function h(d){var a=new e.Deferred;d.apply(this,[]).done(function(b){c.push(b);h(d).done(function(b){a.resolve(c)}).fail(function(b){a.reject(c)})}).fail(function(b){c.push(b);a.reject(c)});return a.promise()}
var f=[],c=[];e.RecursiveCall=function(c,a){var b=new e.Deferred;f=[];g(c,a).always(function(a){b.resolve(a)});return b.promise()};e.AsyncLoop=function(d){var a=new e.Deferred;c=[];h(d).always(function(b){a.resolve(b)});return a.promise()}})(jQuery);